#!/usr/bin/env bash
# (c) Copyright 2018 Maya Vera (mayavera.me)
# .profile.prompt sets the command prompt to:
# <user>@<host> <current_directory> <current_git_branch_name>
# 
# For example: 
# 
# (inside a non-git folder)
# maya ~/Public/gifs
# >
#
# (in a git folder)
# maya ~/projects/linux master
# >
#
# (on a remote server)
# maya@gibson /trash/plsdontlookhere/53cr345
# >
#
# Behaviour:
#   - if the current session is using ssh, <host> will be present
#   - if the current directory is a git repository, <current_git_brtanch_name> will be present
#   - if the current directory has uncommitted files, <current_git_branch_name> will be red, otherwise it will be green

__prompt_command() {
    local EXIT="$?"
    local red='\[\e[31m\]'
    local green='\[\e[32m\]'
    local yellow='\[\e[33m\]'
    local magenta='\[\e[35m\]'
    local cyan='\[\e[36m\]'
    local reset='\[\e[0m\]'
    local user='\u'
    local break='\n'

    PS1="${break}${yellow}${user}${reset}"

    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
        local host="\h"
        PS1+="@${purple}${host}${reset}"
    fi

    local current_directory='\w'
    PS1+=" ${cyan}${current_directory}${reset}"
    
    if [ -x "$(command -v git)" ]; then
        if [[ -e "$(git rev-parse --git-dir 2> /dev/null)" ]]; then
            if [ -z "$(git status --porcelain)" ]; then 
                PS1+=${green}
            else 
                PS1+=${red}
            fi

            local branch=$(git symbolic-ref --short HEAD)
            PS1+=" ${branch}${reset}"
        fi
    fi

    PS1+="${break}"

    if [ $EXIT != 0 ]; then
        PS1+="${red}"
    else
        PS1+="${green}"
    fi
    PS1+="> ${reset}"
}

PROMPT_COMMAND=__prompt_command
